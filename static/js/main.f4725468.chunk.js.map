{"version":3,"sources":["Constants/Common.tsx","Constants/Constants.tsx","Inputs/Inputs.tsx","Inputs/Scrapers.tsx","Constants/Servers.tsx","Constants/Strings.tsx","Introduction/Introduction.tsx","SkillProgress/SkillProgress.tsx","SkillProgress/SkillProgressBreakdown.tsx","SkillProgress/SkillProgressOverall.tsx","Footer/Footer.tsx","App.tsx","index.tsx"],"names":["pct","numerator","denominator","Math","round","Number","EPSILON","ReplaceAll","input","toReplace","replaceWith","includes","replace","emptySkillMapList","Inputs","props","style","width","display","bordered","Title","inputSectionStrings","serverHeader","onChange","updateServer","placeholder","marginBottom","serverMaps","map","server","Option","key","name","value","Search","enterButton","loading","onSearch","updateName","VitalityScraper","url","a","vitalityServerMap","find","goal","defaultGoal","newMaps","skills","Axios","create","get","then","response","$","cheerio","load","data","tableRows","not","length","experiences","i","each","_","tr","push","parseInt","text","exp","goalExp","catch","PkhonorScraper","PkhonorServerMap","axiosInstance","html","skillName","filter","skill","forEach","console","error","OSRSScraper","OSRSServerMap","trim","separator","scraper","color","introductionSectionStrings","title","summary","skillsHeader","skillHeaderSectionStrings","skillListStrings","footerStrings","codeUrl","siteUrl","Introduction","fontSize","paragraph","idx","Paragraph","SkillProgress","EmptySkillList","image","imageStyle","height","description","SkillProgressBreakdown","Typography","level","paddingTop","grid","xs","sm","md","lg","xl","gutter","dataSource","slice","locale","emptyText","renderItem","Item","cover","type","percent","strokeColor","padding","Meta","SkillProgressOverall","overall","from","to","paddingBottom","StyledBottomDiv","styled","div","FooterLink","href","link","children","Footer","bodyStyle","background","borderTop","Text","strings","Date","getFullYear","App","useState","setLoading","setSkills","setServer","warningVisible","setWarningVisible","fontFamily","updateSkills","resolve","serverInfo","serverMap","updatedSkills","format","Promise","message","closable","afterClose","showIcon","margin","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4725468.chunk.js","sourcesContent":["export const pct = (numerator: number, denominator: number) => {\n  return Math.round((numerator / denominator + Number.EPSILON) * 100)\n}\n\nexport const ReplaceAll = (input: string, toReplace: string, replaceWith: string) => {\n  while (input.includes(toReplace)) {\n    input = input.replace(toReplace, replaceWith);\n  }\n\n  return input;\n}","export type skillMap = {\n  name: string,\n  color: string,\n  exp: number,\n  goalExp: number,\n}\n\nexport const emptySkillMapList: skillMap[] = [];","import React, { FC } from \"react\";\nimport { Card, Col, Input, Select, Typography } from \"antd\";\nimport { inputSectionStrings, serverMaps } from \"../Constants\";\n\ntype InputsProps = {\n  loading: boolean,\n  updateName: (name: string) => void,\n  updateServer: (newServer: string) => void,\n};\n\nexport const Inputs: FC<InputsProps> = (props) => {\n  return(\n    <Col style={{width: \"100%\", display: \"block\"}}>\n      <Card bordered={false}>\n        <Typography.Title>{inputSectionStrings.serverHeader}</Typography.Title>\n        <Card bordered={false}>\n          <Select\n            onChange={props.updateServer}\n            placeholder=\"Select a Source\"\n            style={{width: \"100%\", marginBottom: \"15px\"}}>\n            {\n              serverMaps.map((server) => {\n                return (\n                  <Select.Option key={server.name} value={server.name}>\n                    {server.name}\n                  </Select.Option>\n                );\n              })\n            }\n          </Select>\n\n          <Input.Search\n            enterButton\n            loading={props.loading}\n            onSearch={props.updateName}\n            placeholder=\"Enter a Username\"\n          />\n\n        </Card>\n      </Card>\n    </Col>\n  );\n};","import Axios from \"axios\";\nimport cheerio from \"cheerio\";\nimport { ReplaceAll, skillMap, serverMaps, emptySkillMapList } from \"../Constants\";\n\nexport const VitalityScraper = async (url: string): Promise<skillMap[]> => {\n  const vitalityServerMap = serverMaps.find((server) => server.name === \"Vitality\");\n  const goal = vitalityServerMap!.defaultGoal;\n  let newMaps = [...vitalityServerMap!.skills];\n\n  await Axios.create().get(\"https://cors-anywhere.herokuapp.com/\" + url)\n    .then(\n      response => {\n\n        const $ = cheerio.load(response.data);\n        const tableRows = $(\"tbody > tr\").not(\":first-child\");\n\n        if ( tableRows.length === 0) {\n          newMaps = emptySkillMapList;\n          return;\n        }\n\n        const experiences: number[] = [];\n\n        tableRows.each(\n          (_, tr) => { experiences.push(\n            parseInt(ReplaceAll($(tr).find(\":nth-child(3)\").text(), \",\", \"\"))\n          )}\n        );\n\n        for (let i in newMaps) {\n          newMaps[i].exp = experiences[i];\n          newMaps[i].goalExp = newMaps[i].name === \"Overall\" ? goal * 23 : goal;\n        };\n      }\n    )\n    .catch(() => newMaps = [])\n\n  return newMaps\n\n}\n\nexport const PkhonorScraper = async (url: string): Promise<skillMap[]> => {\n  const PkhonorServerMap = serverMaps.find((server) => server.name === \"PkHonor\");\n  const goal = PkhonorServerMap!.defaultGoal;\n  let newMaps = [...PkhonorServerMap!.skills];\n\n  const axiosInstance = Axios.create();\n  await axiosInstance.get(\"https://cors-anywhere.herokuapp.com/\" + url)\n    .then(\n      response => {\n        const html = response.data;\n        const $ = cheerio.load(html);\n        const tableRows: Cheerio = $(\"tbody > tr\");\n\n        if (tableRows.length === 0) {\n          newMaps = emptySkillMapList;\n          return;\n        }\n\n        tableRows.each((_, tr) => {\n          const skillName = $(tr).find(\":first-child > div\").text();\n          const exp = parseInt(ReplaceAll($(tr).find(\":nth-child(4)\").text(), \",\", \"\"));\n\n          newMaps\n            .filter((skill) => skill.name === skillName)\n            .forEach((skill) => {\n              skill.exp = exp;\n              skill.goalExp = skill.name === \"Overall\" ? goal * 23 : goal;\n            });\n        });\n\n      }\n    )\n    .catch(console.error)\n\n  return newMaps;\n\n}\n\nexport const OSRSScraper = async (url: string): Promise<skillMap[]> => {\n  const OSRSServerMap = serverMaps.find((server) => server.name === \"Old School Runescape (Normal)\");\n  const goal = OSRSServerMap!.defaultGoal;\n  let newMaps = [...OSRSServerMap!.skills];\n\n  const axiosInstance = Axios.create();\n  await axiosInstance.get(\"https://cors-anywhere.herokuapp.com/\" + url)\n    .then(\n      response => {\n        const html = response.data;\n        const $ = cheerio.load(html);\n\n        const tableRows = $(\"div#contentHiscores > table > tbody > tr\")\n          .not(\":first-child\")\n          .not(\":nth-child(2)\")\n          .not(\":nth-child(3)\");\n\n        if ( tableRows.length === 0 ) {\n          newMaps = emptySkillMapList;\n          return;\n        }\n\n        tableRows.each((_, tr) => {\n\n          const skillName = $(tr).find(\":nth-child(2) > a\").text().trim();\n          const exp = parseInt(ReplaceAll($(tr).find(\":nth-child(5)\").text(), \",\", \"\"));\n\n          newMaps\n            .filter((skill) => skill.name === skillName)\n            .forEach((skill) => {\n              skill.exp = exp;\n              skill.goalExp = skill.name === \"Overall\" ? goal * 23 : goal;\n            });\n\n        });\n\n        return newMaps;\n      }\n    )\n    .catch(console.error)\n\n  return newMaps;\n}","import { OSRSScraper, PkhonorScraper, VitalityScraper } from \"../Inputs\";\n\nexport const serverMaps = [\n  {\n    name: \"Vitality\",\n    separator: \"%20\",\n    url: \"https://vitality.ps/highscores/index.php?user={}\",\n    defaultGoal: 200000000,\n    scraper: VitalityScraper,\n    skills: [\n      { name: \"Overall\", color: \"\", exp: 0, goalExp: 200000000 * 23 },\n      { name: \"Attack\", color: \"#822820\", exp: 0, goalExp: 200000000 },\n      { name: \"Defence\", color: \"#6e81c1\", exp: 0, goalExp: 200000000 },\n      { name: \"Strength\", color: \"#0d7c51\", exp: 0, goalExp: 200000000 },\n      { name: \"Hitpoints\", color: \"#d3d1cd\", exp: 0, goalExp: 200000000 },\n      { name: \"Ranged\", color: \"#62792a\", exp: 0, goalExp: 200000000 },\n      { name: \"Prayer\", color: \"#e3e0e0\", exp: 0, goalExp: 200000000 },\n      { name: \"Magic\", color: \"#b5a890\", exp: 0, goalExp: 200000000 },\n      { name: \"Cooking\", color: \"#60266f\", exp: 0, goalExp: 200000000 },\n      { name: \"Woodcutting\", color: \"#9e8249\", exp: 0, goalExp: 200000000 },\n      { name: \"Fletching\", color: \"#094d50\", exp: 0, goalExp: 200000000 },\n      { name: \"Fishing\", color: \"#619ed2\", exp: 0, goalExp: 200000000 },\n      { name: \"Firemaking\", color: \"#da741a\", exp: 0, goalExp: 200000000 },\n      { name: \"Crafting\", color: \"#8a6a4e\", exp: 0, goalExp: 200000000 },\n      { name: \"Smithing\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Mining\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Herblore\", color: \"#0d7011\", exp: 0, goalExp: 200000000 },\n      { name: \"Agility\", color: \"#2a2c79\", exp: 0, goalExp: 200000000 },\n      { name: \"Thieving\", color: \"#633151\", exp: 0, goalExp: 200000000 },\n      { name: \"Slayer\", color: \"#871a0d\", exp: 0, goalExp: 200000000 },\n      { name: \"Farming\", color: \"#2c632e\", exp: 0, goalExp: 200000000 },\n      { name: \"Runecraft\", color: \"#bcbcb2\", exp: 0, goalExp: 200000000 },\n      { name: \"Hunter\", color: \"#736c4d\", exp: 0, goalExp: 200000000 },\n      { name: \"Construction\", color: \"#ac9f89\", exp: 0, goalExp: 200000000 },\n    ],\n  },\n  {\n    name: \"PkHonor\",\n    separator: \"+\",\n    url: \"https://highscores.pkhonor.net/?u={}\",\n    defaultGoal: 2000000000,\n    scraper: PkhonorScraper,\n    skills: [\n      { name: \"Overall\", color: \"\", exp: 0, goalExp: 2000000000 * 23 },\n      { name: \"Attack\", color: \"#822820\", exp: 0, goalExp: 2000000000 },\n      { name: \"Defence\", color: \"#6e81c1\", exp: 0, goalExp: 2000000000 },\n      { name: \"Strength\", color: \"#0d7c51\", exp: 0, goalExp: 2000000000 },\n      { name: \"Hitpoints\", color: \"#d3d1cd\", exp: 0, goalExp: 2000000000 },\n      { name: \"Ranged\", color: \"#62792a\", exp: 0, goalExp: 2000000000 },\n      { name: \"Prayer\", color: \"#e3e0e0\", exp: 0, goalExp: 2000000000 },\n      { name: \"Magic\", color: \"#b5a890\", exp: 0, goalExp: 2000000000 },\n      { name: \"Cooking\", color: \"#60266f\", exp: 0, goalExp: 2000000000 },\n      { name: \"Woodcutting\", color: \"#9e8249\", exp: 0, goalExp: 2000000000 },\n      { name: \"Fletching\", color: \"#094d50\", exp: 0, goalExp: 2000000000 },\n      { name: \"Fishing\", color: \"#619ed2\", exp: 0, goalExp: 2000000000 },\n      { name: \"Firemaking\", color: \"#da741a\", exp: 0, goalExp: 2000000000 },\n      { name: \"Crafting\", color: \"#8a6a4e\", exp: 0, goalExp: 2000000000 },\n      { name: \"Smithing\", color: \"#5c5c49\", exp: 0, goalExp: 2000000000 },\n      { name: \"Mining\", color: \"#5c5c49\", exp: 0, goalExp: 2000000000 },\n      { name: \"Herblore\", color: \"#0d7011\", exp: 0, goalExp: 2000000000 },\n      { name: \"Agility\", color: \"#2a2c79\", exp: 0, goalExp: 2000000000 },\n      { name: \"Thieving\", color: \"#633151\", exp: 0, goalExp: 2000000000 },\n      { name: \"Slayer\", color: \"#871a0d\", exp: 0, goalExp: 2000000000 },\n      { name: \"Farming\", color: \"#2c632e\", exp: 0, goalExp: 2000000000 },\n      { name: \"Runecrafting\", color: \"#bcbcb2\", exp: 0, goalExp: 2000000000 },\n      { name: \"Hunter\", color: \"#736c4d\", exp: 0, goalExp: 2000000000 },\n      { name: \"Construction\", color: \"#ac9f89\", exp: 0, goalExp: 2000000000 },\n    ],\n  },\n  {\n    name: \"Old School Runescape (Normal)\",\n    separator: \"%A0\",\n    url: \"https://secure.runescape.com/m=hiscore_oldschool/hiscorepersonal?user1={}\",\n    defaultGoal: 200000000,\n    scraper: OSRSScraper,\n    skills: [\n      { name: \"Overall\", color: \"\", exp: 0, goalExp: 200000000 * 23 },\n      { name: \"Attack\", color: \"#822820\", exp: 0, goalExp: 200000000 },\n      { name: \"Defence\", color: \"#6e81c1\", exp: 0, goalExp: 200000000 },\n      { name: \"Strength\", color: \"#0d7c51\", exp: 0, goalExp: 200000000 },\n      { name: \"Hitpoints\", color: \"#d3d1cd\", exp: 0, goalExp: 200000000 },\n      { name: \"Ranged\", color: \"#62792a\", exp: 0, goalExp: 200000000 },\n      { name: \"Prayer\", color: \"#e3e0e0\", exp: 0, goalExp: 200000000 },\n      { name: \"Magic\", color: \"#b5a890\", exp: 0, goalExp: 200000000 },\n      { name: \"Cooking\", color: \"#60266f\", exp: 0, goalExp: 200000000 },\n      { name: \"Woodcutting\", color: \"#9e8249\", exp: 0, goalExp: 200000000 },\n      { name: \"Fletching\", color: \"#094d50\", exp: 0, goalExp: 200000000 },\n      { name: \"Fishing\", color: \"#619ed2\", exp: 0, goalExp: 200000000 },\n      { name: \"Firemaking\", color: \"#da741a\", exp: 0, goalExp: 200000000 },\n      { name: \"Crafting\", color: \"#8a6a4e\", exp: 0, goalExp: 200000000 },\n      { name: \"Smithing\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Mining\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Herblore\", color: \"#0d7011\", exp: 0, goalExp: 200000000 },\n      { name: \"Agility\", color: \"#2a2c79\", exp: 0, goalExp: 200000000 },\n      { name: \"Thieving\", color: \"#633151\", exp: 0, goalExp: 200000000 },\n      { name: \"Slayer\", color: \"#871a0d\", exp: 0, goalExp: 200000000 },\n      { name: \"Farming\", color: \"#2c632e\", exp: 0, goalExp: 200000000 },\n      { name: \"Runecraft\", color: \"#bcbcb2\", exp: 0, goalExp: 200000000 },\n      { name: \"Hunter\", color: \"#736c4d\", exp: 0, goalExp: 200000000 },\n      { name: \"Construction\", color: \"#ac9f89\", exp: 0, goalExp: 200000000 },\n    ],\n  },\n  {\n    name: \"Old School Runescape (Ironman)\",\n    separator: \"%A0\",\n    url: \"https://secure.runescape.com/m=hiscore_oldschool_ironman/hiscorepersonal?user1={}\",\n    defaultGoal: 200000000,\n    scraper: OSRSScraper,\n    skills: [\n      { name: \"Overall\", color: \"\", exp: 0, goalExp: 200000000 * 23 },\n      { name: \"Attack\", color: \"#822820\", exp: 0, goalExp: 200000000 },\n      { name: \"Defence\", color: \"#6e81c1\", exp: 0, goalExp: 200000000 },\n      { name: \"Strength\", color: \"#0d7c51\", exp: 0, goalExp: 200000000 },\n      { name: \"Hitpoints\", color: \"#d3d1cd\", exp: 0, goalExp: 200000000 },\n      { name: \"Ranged\", color: \"#62792a\", exp: 0, goalExp: 200000000 },\n      { name: \"Prayer\", color: \"#e3e0e0\", exp: 0, goalExp: 200000000 },\n      { name: \"Magic\", color: \"#b5a890\", exp: 0, goalExp: 200000000 },\n      { name: \"Cooking\", color: \"#60266f\", exp: 0, goalExp: 200000000 },\n      { name: \"Woodcutting\", color: \"#9e8249\", exp: 0, goalExp: 200000000 },\n      { name: \"Fletching\", color: \"#094d50\", exp: 0, goalExp: 200000000 },\n      { name: \"Fishing\", color: \"#619ed2\", exp: 0, goalExp: 200000000 },\n      { name: \"Firemaking\", color: \"#da741a\", exp: 0, goalExp: 200000000 },\n      { name: \"Crafting\", color: \"#8a6a4e\", exp: 0, goalExp: 200000000 },\n      { name: \"Smithing\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Mining\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Herblore\", color: \"#0d7011\", exp: 0, goalExp: 200000000 },\n      { name: \"Agility\", color: \"#2a2c79\", exp: 0, goalExp: 200000000 },\n      { name: \"Thieving\", color: \"#633151\", exp: 0, goalExp: 200000000 },\n      { name: \"Slayer\", color: \"#871a0d\", exp: 0, goalExp: 200000000 },\n      { name: \"Farming\", color: \"#2c632e\", exp: 0, goalExp: 200000000 },\n      { name: \"Runecraft\", color: \"#bcbcb2\", exp: 0, goalExp: 200000000 },\n      { name: \"Hunter\", color: \"#736c4d\", exp: 0, goalExp: 200000000 },\n      { name: \"Construction\", color: \"#ac9f89\", exp: 0, goalExp: 200000000 },\n    ],\n  },\n  {\n    name: \"Old School Runescape (Ultimate Ironman)\",\n    separator: \"%A0\",\n    url: \"https://secure.runescape.com/m=hiscore_oldschool_ultimate/hiscorepersonal?user1={}\",\n    defaultGoal: 200000000,\n    scraper: OSRSScraper,\n    skills: [\n      { name: \"Overall\", color: \"\", exp: 0, goalExp: 200000000 * 23 },\n      { name: \"Attack\", color: \"#822820\", exp: 0, goalExp: 200000000 },\n      { name: \"Defence\", color: \"#6e81c1\", exp: 0, goalExp: 200000000 },\n      { name: \"Strength\", color: \"#0d7c51\", exp: 0, goalExp: 200000000 },\n      { name: \"Hitpoints\", color: \"#d3d1cd\", exp: 0, goalExp: 200000000 },\n      { name: \"Ranged\", color: \"#62792a\", exp: 0, goalExp: 200000000 },\n      { name: \"Prayer\", color: \"#e3e0e0\", exp: 0, goalExp: 200000000 },\n      { name: \"Magic\", color: \"#b5a890\", exp: 0, goalExp: 200000000 },\n      { name: \"Cooking\", color: \"#60266f\", exp: 0, goalExp: 200000000 },\n      { name: \"Woodcutting\", color: \"#9e8249\", exp: 0, goalExp: 200000000 },\n      { name: \"Fletching\", color: \"#094d50\", exp: 0, goalExp: 200000000 },\n      { name: \"Fishing\", color: \"#619ed2\", exp: 0, goalExp: 200000000 },\n      { name: \"Firemaking\", color: \"#da741a\", exp: 0, goalExp: 200000000 },\n      { name: \"Crafting\", color: \"#8a6a4e\", exp: 0, goalExp: 200000000 },\n      { name: \"Smithing\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Mining\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Herblore\", color: \"#0d7011\", exp: 0, goalExp: 200000000 },\n      { name: \"Agility\", color: \"#2a2c79\", exp: 0, goalExp: 200000000 },\n      { name: \"Thieving\", color: \"#633151\", exp: 0, goalExp: 200000000 },\n      { name: \"Slayer\", color: \"#871a0d\", exp: 0, goalExp: 200000000 },\n      { name: \"Farming\", color: \"#2c632e\", exp: 0, goalExp: 200000000 },\n      { name: \"Runecraft\", color: \"#bcbcb2\", exp: 0, goalExp: 200000000 },\n      { name: \"Hunter\", color: \"#736c4d\", exp: 0, goalExp: 200000000 },\n      { name: \"Construction\", color: \"#ac9f89\", exp: 0, goalExp: 200000000 },\n    ],\n  },\n  {\n    name: \"Old School Runescape (Hardcore Ironman)\",\n    separator: \"%A0\",\n    url: \"https://secure.runescape.com/m=hiscore_oldschool_hardcore_ironman/hiscorepersonal?user1={}\",\n    defaultGoal: 200000000,\n    scraper: OSRSScraper,\n    skills: [\n      { name: \"Overall\", color: \"\", exp: 0, goalExp: 200000000 * 23 },\n      { name: \"Attack\", color: \"#822820\", exp: 0, goalExp: 200000000 },\n      { name: \"Defence\", color: \"#6e81c1\", exp: 0, goalExp: 200000000 },\n      { name: \"Strength\", color: \"#0d7c51\", exp: 0, goalExp: 200000000 },\n      { name: \"Hitpoints\", color: \"#d3d1cd\", exp: 0, goalExp: 200000000 },\n      { name: \"Ranged\", color: \"#62792a\", exp: 0, goalExp: 200000000 },\n      { name: \"Prayer\", color: \"#e3e0e0\", exp: 0, goalExp: 200000000 },\n      { name: \"Magic\", color: \"#b5a890\", exp: 0, goalExp: 200000000 },\n      { name: \"Cooking\", color: \"#60266f\", exp: 0, goalExp: 200000000 },\n      { name: \"Woodcutting\", color: \"#9e8249\", exp: 0, goalExp: 200000000 },\n      { name: \"Fletching\", color: \"#094d50\", exp: 0, goalExp: 200000000 },\n      { name: \"Fishing\", color: \"#619ed2\", exp: 0, goalExp: 200000000 },\n      { name: \"Firemaking\", color: \"#da741a\", exp: 0, goalExp: 200000000 },\n      { name: \"Crafting\", color: \"#8a6a4e\", exp: 0, goalExp: 200000000 },\n      { name: \"Smithing\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Mining\", color: \"#5c5c49\", exp: 0, goalExp: 200000000 },\n      { name: \"Herblore\", color: \"#0d7011\", exp: 0, goalExp: 200000000 },\n      { name: \"Agility\", color: \"#2a2c79\", exp: 0, goalExp: 200000000 },\n      { name: \"Thieving\", color: \"#633151\", exp: 0, goalExp: 200000000 },\n      { name: \"Slayer\", color: \"#871a0d\", exp: 0, goalExp: 200000000 },\n      { name: \"Farming\", color: \"#2c632e\", exp: 0, goalExp: 200000000 },\n      { name: \"Runecraft\", color: \"#bcbcb2\", exp: 0, goalExp: 200000000 },\n      { name: \"Hunter\", color: \"#736c4d\", exp: 0, goalExp: 200000000 },\n      { name: \"Construction\", color: \"#ac9f89\", exp: 0, goalExp: 200000000 },\n    ],\n  },\n];","export const introductionSectionStrings = {\n  title: \"Skills Dashboard\",\n  summary: [\n    \"This is a personal project I threw together as an effort to track statistics on \"\n    + \"an RSPS. It allows for a (continually growing) list of RSPS's to have their \"\n    + \"skills tracked. I hope you are able to make good use of it to see your own \"\n    + \"progress. Please feel free to check out my other projects and learn more about \"\n    + \"me via the link in the footer. Thanks for checking it out!\",\n  ]\n}\n\nexport const inputSectionStrings = {\n  serverHeader: \"Server Inputs\",\n  skillsHeader: \"Skill Selection\",\n};\n\nexport const skillHeaderSectionStrings = {\n  header: \"Skill Statistics\",\n};\n\nexport const skillListStrings = {\n  header: \"Skill Breakdown\",\n  empty: \"Fill in Input above\",\n}\n\nexport const footerStrings = {\n  codeUrl: \"https://github.com/jeremyswerdlow/rs-skills-dashboard\",\n  siteUrl: \"https://jeremyswerdlow.github.io/about\",\n  text: \"Jeremy Swerdlow\",\n}\n\nexport const warningMessage = \"Failed to retrieve data. Please check your inputs.\"","import React, { FC } from \"react\";\nimport { Card, Col, Typography } from \"antd\";\nimport { introductionSectionStrings } from \"../Constants\";\n\ntype IntroductionProps = {\n\n};\n\nexport const Introduction: FC<IntroductionProps> = (props) => {\n  return (\n    <Col style={{width: \"100%\"}}>\n      <Card bordered={false}>\n        <Typography.Title style={{fontSize: \"96px\", marginBottom: \"10px\"}}>\n          {introductionSectionStrings.title}\n        </Typography.Title>\n        {\n          introductionSectionStrings.summary.map((paragraph, idx) => {\n            return (\n              <Typography.Paragraph key={`intro-para-${idx}`}>\n                {paragraph}\n              </Typography.Paragraph>\n            );\n          })\n        }\n      </Card>\n    </Col>\n  );\n};","import React, { FC } from \"react\";\nimport { Card, Col, Typography } from \"antd\";\nimport { skillHeaderSectionStrings, skillMap } from \"../Constants\";\nimport { SkillProgressBreakdown, SkillProgressOverall } from \".\";\n\ntype SkillProgressProps = {\n  skills: skillMap[],\n}\n\nexport const SkillProgress: FC<SkillProgressProps> = (props) => {\n  const { skills } = props;\n\n  return(\n    <Col style={{ width: \"100%\" }}>\n      <Card bordered={false}>\n        {(skills.length > 0) &&\n          <>\n            <Typography.Title>{skillHeaderSectionStrings.header}</Typography.Title>\n            <Card bordered={false}>\n              <SkillProgressOverall skills={skills} />\n              <SkillProgressBreakdown skills={skills} />\n            </Card>\n          </>\n        }\n      </Card>\n    </Col>\n  );\n};","import React, { FC } from \"react\";\nimport { Card, Empty, List, Progress, Typography } from \"antd\";\nimport { pct, skillListStrings, skillMap } from \"../Constants\";\n\ntype EmptySkillList = {\n  image?: React.ReactNode,\n  description: string,\n};\n\nconst EmptySkillList: FC<EmptySkillList> = (props) => {\n  return (\n    <Empty\n      image={props.image}\n      imageStyle={{height: 100}}\n      description={props.description}\n    />\n  );\n}\n\ntype SkillProgressBreakdownProps = {\n  skills: skillMap[],\n};\n\nexport const SkillProgressBreakdown: FC<SkillProgressBreakdownProps> = (props) => {\n  const { Title } = Typography;\n\n  return (\n    <>\n      <Title level={3} style={{paddingTop: \"20px\"}}>\n        {skillListStrings.header}\n      </Title>\n      <List\n        grid={{xs: 1, sm: 2, md: 3, lg: 4, xl: 6, gutter: 15}}\n        dataSource={props.skills.slice(1)}\n        locale={{emptyText: <EmptySkillList description={skillListStrings.empty}/>}}\n        renderItem={\n          skill => (\n            <List.Item>\n              <Card\n                cover={\n                  <Progress\n                    type={\"circle\"}\n                    percent={pct(skill.exp, skill.goalExp)}\n                    strokeColor={skill.color}\n                    style={{padding: \"15px 15px 0px 15px\"}}\n                  />\n                }\n              >\n                <Card.Meta title={skill.name} description={`${skill.exp} xp`} />\n              </Card>\n            </List.Item>\n          )\n        }\n      />\n    </>\n  );\n}","import React, { FC } from \"react\";\nimport { Card, Progress } from \"antd\";\nimport { pct } from \"../Constants\";\n\ntype SkillProgressOverallProps = {\n  skills: {\n    name: string;\n    color: string;\n    exp: number;\n    goalExp: number;\n  }[],\n};\n\nexport const SkillProgressOverall: FC<SkillProgressOverallProps> = (props) => {\n  const overall = props.skills[0];\n\n  return (<>\n    <Card>\n      <Progress\n        percent={pct(overall.exp, overall.goalExp)}\n        strokeColor={{from: \"#8ee3ef\", to: \"#49aa19\"}}\n        style={{paddingBottom: \"15px\"}}\n      />\n      <Card.Meta title={overall.name} description={`${overall.exp} xp`} />\n    </Card>\n  </>);\n}","import { Card, Typography } from \"antd\";\nimport React, { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledBottomDiv = styled.div`\n  text-align: center;\n  position: fixed;\n  bottom: 0;\n  width: 100%;\n`;\n\ntype FooterLinkProps = {\n  link: string,\n}\n\nconst FooterLink: FC<FooterLinkProps> = (props) => {\n  return(\n    <a href={props.link}>{props.children}</a>\n  );\n}\n\ntype FooterProps = {\n  strings: {\n    siteUrl: string,\n    codeUrl: string,\n    text: string,\n  }\n};\n\nexport const Footer: FC<FooterProps> = (props) => {\n  return (\n    <StyledBottomDiv>\n      <Card\n        bordered={false}\n        bodyStyle={{ padding: \"15px\" }}\n        style={{\n          background: \"rgba(20, 20, 20, 0.8)\",\n          borderTop: \"solid 1px rgb(23, 125, 220)\",\n        }}\n      >\n        <Typography.Text style={{ color: \"rgb(23, 125, 220)\", padding: \"10px\" }}>\n          {'Copyright © '}\n          <FooterLink link={props.strings.siteUrl}>{props.strings.text}</FooterLink>\n          {' '} {new Date().getFullYear()} {'. See the '}\n          <FooterLink link={props.strings.codeUrl}>{'source code here.'}</FooterLink>\n        </Typography.Text>\n      </Card>\n    </StyledBottomDiv>\n  );\n}","import React, { useState } from \"react\";\nimport { Alert, Layout, Row } from \"antd\";\nimport format from \"string-format\";\n\nimport { emptySkillMapList, footerStrings, ReplaceAll, serverMaps, warningMessage } from \"./Constants\";\nimport { Inputs } from \"./Inputs\";\nimport { Introduction } from \"./Introduction\";\nimport { SkillProgress } from \"./SkillProgress\";\nimport { Footer } from \"./Footer\";\n\nconst App = () => {\n\n  // states for the App\n  const [ loading, setLoading ] = useState(false);\n  const [ skills, setSkills ] = useState(emptySkillMapList);\n  const [ server, setServer ] = useState(\"Vitality\");\n  const [ warningVisible, setWarningVisible ] = useState(false);\n\n  const showWarning = () => {\n    setWarningVisible(true)\n  };\n\n  const updateName = (name: string) => {\n    if ( name && server ) {\n\n      const updateSkills = async ( url: string, resolve: () => void ) => {\n\n        const serverInfo = serverMaps.find( serverMap => serverMap.name === server );\n        // TODO: move this to a variable, check if valid, and throw a warning if not\n        const updatedSkills = await serverInfo!.scraper(url);\n\n        if (updatedSkills.length === 0) {\n          showWarning();\n        }\n\n        setSkills(updatedSkills);\n        resolve();\n\n      }\n\n      const serverInfo = serverMaps.find(serverMap => serverMap.name === server);\n      const url = format(serverInfo!.url, ReplaceAll(name, \" \", serverInfo!.separator))\n      new Promise((resolve) => {\n\n        setLoading(true);\n        updateSkills(url, resolve);\n\n      }).then( () => setLoading(false) );\n    }\n  };\n\n  return (\n    <Layout\n      style={{ background: \"rgb(20, 20, 20)\", fontFamily: \"Roboto\", height: \"100%\" }}\n    >\n      <Row><Introduction /></Row>\n      <Row>\n        <Inputs loading={loading} updateName={updateName} updateServer={setServer} />\n        {warningVisible &&\n          <Alert\n            message={warningMessage}\n            type=\"warning\"\n            closable\n            afterClose={ () => setWarningVisible(false) }\n            showIcon\n            style={{ margin: \"auto\" }}\n          />\n        }\n      </Row>\n      <Row>\n        <SkillProgress skills={skills} />\n      </Row>\n      <Row>\n        <div style={{ background: \"rgb(20, 20, 20)\", padding: \"5px\", width: \"100%\" }}/>\n        <Footer strings={footerStrings} />\n      </Row>\n    </Layout>\n  );\n}\n\nexport default App;\n","import \"fontsource-roboto\";\nimport \"antd/dist/antd.dark.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}